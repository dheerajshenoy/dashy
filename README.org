* dashy.el

=dashy.el= is a simple, customizable dashboard for Emacs that provides an overview of recent files and bookmarks. The dashboard is presented in a minimalistic manner, focusing on functionality and a clean interface.

[[./images/image.png]]

* Table of Contents :toc:
- [[#dashyel][dashy.el]]
- [[#features][Features]]
- [[#installation][Installation]]
  - [[#use-package-declaration][Use Package Declaration]]
  - [[#you-can-set-dashy-to-open-up-when-opening-emacs-by-default][You can set dashy to open up when opening emacs by default]]
- [[#why-][Why ?]]
- [[#why-the-name-dashy-][Why the name Dashy ?]]
- [[#customization-options][Customization Options]]
  - [[#general-appearance][General Appearance]]
  - [[#displaying-recent-files][Displaying Recent Files]]
  - [[#displaying-bookmarks][Displaying Bookmarks]]
  - [[#faces][Faces]]
- [[#functions][Functions]]
  - [[#private-functions][Private Functions]]
  - [[#interactive-command][Interactive Command]]
- [[#todos][TODOs]]
- [[#acknowledgement][Acknowledgement]]

* Features

+ Display a customizable title for the dashboard.
+ Show recent files from the recentf list.
+ Display bookmarks using Emacs' bookmark functionality.
+ Optionally linkify recent files for easy navigation.
+ Highly customizable, allowing users to control the appearance and content displayed.

* Installation

This package is not yet available on MELPA. Please clone this repo and include the path to load in your emacs configuration.

** Use Package Declaration

#+begin_src elisp
(use-package dashy
  :ensure nil
  :load-path "<path to the dashy directory>" ;; add the dashy directory path you cloned at
  :custom
  (dashy-title "Dashy is Awesome") ;; title string
  (dashy-show-title t) ;; show title or not ?
  (dashy-if-no-title-show-blank-lines nil) ;; if title is not specified, add blank padding at the top or not ?
  (dashy-show-recent-files t) ;; show recent files or not ?
  (dashy-show-bookmarks t) ;; show bookmarks or not ?
  (dashy-linkify-recent-files t) ;; should add links to recent files to make it clickable and go to the respective file
  (dashy-num-recent-files 5) ;; total number of recent files to display
  (dashy-num-bookmarks 5) ;; total number of bookmarks to display
  ;; (dashy-image (concat user-emacs-directory "emacs.svg")) ;; ~/.config/emacs/emacs.svg FIXME: Not yet Implemented!
  )

;; You can override the default dashboard by defining the function â€˜dashy-contentsâ€™
(defun dashy-contents ()
  (message "Hello World"))

#+end_src

** You can set dashy to open up when opening emacs by default

#+begin_src elisp
(setopt initial-buffer-choice #'dashy-show)
#+end_src

Or if you wanna do it manually just call the =dashy-show= interactive command

#+begin_src elisp
(dashy-show)
#+end_src

* Why ?

I wanted to learn Emacs Lisp and whatâ€™s the best way than by writing a program.

* Why the name Dashy ?

I just felt like that this was a dashing name (ðŸ¤£) for a dashing dashboard.

* Customization Options

You can customize the dashboard through a variety of user options (defcustom). These are the primary options available:

** General Appearance

+ =dashy-image= Set an image to display on the dashboard. (Not yet implemented in the current version).
+ =dashy-show-title= Toggle whether the dashboard should display a title.
+ =dashy-title= The text used as the title of the dashboard. Default is "Dashy".
+ =dashy-if-no-title-show-blank-lines= When the title is disabled, insert blank lines in its place to maintain layout.

** Displaying Recent Files

+ =dashy-show-recent-files= Toggle whether to display recent files in the dashboard.
+ =dashy-linkify-recent-files= If enabled, recent files will be clickable, allowing quick navigation.
+ =dashy-num-recent-files= The number of recent files to display. If set to -1, all recent files are displayed.

** Displaying Bookmarks

+ =dashy-show-bookmarks= Toggle whether to display bookmarks in the dashboard.
+ =dashy-num-bookmarks= The number of bookmarks to display. If set to -1, all bookmarks are displayed.

** Faces

Several faces are defined to customize the appearance of the dashboard:

+ =dashy-title-face= face for dashboard title.
+ =dashy-header-face= face for headers sections like "Recent Files" and "Bookmarks".
+ =dashy-item-face= face for the dashboard items

* Functions

** Private Functions

+ =dashy--get-title-text= Returns the title text for the dashboard based on user customization.
+ =dashy--get-dashy-buffer-name= Returns the dashy buffer name
+ =dashy--insert-item-button= Inserts a text button with the text and callback function passed
+ =dashy--insert-header= Inserts a header with a customizable face (used for sections like "Recent Files" and "Bookmarks").
+ =dashy--insert-title= Inserts the dashboard title or blank lines based on user preferences.
+ =dashy--insert-recent-files= Displays a list of recent files, optionally linkified.
+ =dashy--get-bookmarks-with-locations= Returns the list of bookmarks with their locations
+ =dashy--insert-bookmarks= Displays a list of bookmarks.
+ =dashy--str-len= Calculates the pixel width of a text
+ =dashy--find-max-width= Returns the max width within the region specified in the buffer

** Interactive Command

+ =dashy-contents= This generates the contents of the dashboard. This function can be overloaded to output anything.
+ =dashy-show= The main interactive function that displays the dashboard. It creates a buffer with recent files, bookmarks, and any other configured elements, making it easy for the user to access important information.
+ =dashy-goto-next-item= Go to the next menu item
+ =dashy-goto-prev-item= Go to the previous menu item
+ =dashy-goto-next-header= Go to the next header
+ =dashy-goto-prev-header= Go to the previous header

* TODOs

- [X] Bookmarks
- [X] Recent Files
- [X] Open Bookmarks properly

* Acknowledgement

*Dashy* is inspired by the similar dashboard packages. I have also shamelessly borrowed few codes from these packages as the documentation for alignment and other stuff was a bit all over the place and confusing. A huge thanks you developers of the following packages:

+ [[https://github.com/emacs-dashboard/emacs-dashboard][Emacs Dashboard]]
+ [[https://github.com/ichernyshovvv/enlight][Enlight]]
